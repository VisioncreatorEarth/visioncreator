name: Supabase Backup and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      DB_USER: ${{ secrets.SUPABASE_DB_USER }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install PostgreSQL client and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client jq
          pg_dump --version

      - name: Construct DB URL with encoded password
        run: |
          ENCODED_PASSWORD=$(echo -n "$DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgresql://$DB_USER.$SUPABASE_PROJECT_ID:$ENCODED_PASSWORD@$DB_HOST:5432/$DB_NAME"
          echo "DB_URL=$DB_URL" >> $GITHUB_ENV

      - name: Set folder name
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            FOLDER_NAME="${TIMESTAMP}_daily"
          else
            SHORT_SHA=$(git rev-parse --short HEAD)
            FOLDER_NAME="${TIMESTAMP}_${SHORT_SHA}"
          fi
          echo "FOLDER_NAME=$FOLDER_NAME" >> $GITHUB_ENV

      - name: Backup entire database (including auth)
        run: |
          pg_dump "$DB_URL" -F c -f full_backup.dump

      - name: Upload full backup to DO Spaces
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: full_backup.dump
          out_dir: ${{ env.FOLDER_NAME }}

      - name: Clean up local backup files
        run: rm full_backup.dump

  deploy:
    needs: backup
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase Login
        run: supabase login $SUPABASE_ACCESS_TOKEN

      - name: Deploy Supabase Migration
        run: |
          cd packages/supacreator/supabase
          supabase link --project-ref $PROJECT_ID
          supabase db push
