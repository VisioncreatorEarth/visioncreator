name: Supabase Restore

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "CONFIRM" to proceed with database restore'
        required: true
      backup_filename:
        description: "Enter the backup filename to restore (without .sql extension)"
        required: true

jobs:
  restore:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'CONFIRM'
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI for DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_KEY
          aws configure set default.region ${{ secrets.DO_SPACE_REGION }}
          aws configure set s3.endpoint_url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com

      - name: Download specified backup file
        run: |
          aws s3 --endpoint-url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com \
            cp s3://${{ secrets.DO_SPACE_NAME }}/${{ github.event.inputs.backup_filename }}.sql ./backup_to_restore.sql

      - name: Supabase Login
        run: supabase login $SUPABASE_ACCESS_TOKEN

      - name: Initialize Supabase project and restore database
        run: |
          supabase init
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push ./backup_to_restore.sql --password $SUPABASE_DB_PASSWORD --db-url postgres://postgres:$SUPABASE_DB_PASSWORD@db.$SUPABASE_PROJECT_ID.supabase.co:5432/postgres

      - name: Cleanup
        run: rm backup_to_restore.sql

      - name: Restoration complete
        run: |
          echo "Database restore completed from backup: ${{ github.event.inputs.backup_filename }}.sql"
          echo "Please verify your database to ensure the restoration was successful."
