name: Supabase Restore

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "CONFIRM" to proceed with database restore'
        required: true
      backup_folder:
        description: "Enter the backup folder name to restore"
        required: true

jobs:
  restore:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'CONFIRM'
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
      SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase Login
        run: supabase login $SUPABASE_ACCESS_TOKEN

      - name: Create minimal Supabase config
        run: |
          mkdir -p supabase
          echo "project_id = \"$SUPABASE_PROJECT_ID\"" > supabase/config.toml

      - name: Link to Supabase project
        run: supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Configure AWS CLI for DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.DO_SPACE_REGION }}
          aws configure set s3.endpoint_url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com

      - name: Download backup files
        run: |
          mkdir -p ${{ github.event.inputs.backup_folder }}
          aws s3 --endpoint-url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com \
            cp --recursive s3://${{ secrets.DO_SPACE_NAME }}/${{ github.event.inputs.backup_folder }} ./${{ github.event.inputs.backup_folder }}

      - name: Restore database
        run: |
          # Construct the connection string
          ENCODED_PASSWORD=$(echo -n "$SUPABASE_DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgres://$SUPABASE_DB_USER:${ENCODED_PASSWORD}@$SUPABASE_DB_HOST:5432/$SUPABASE_DB_NAME"

          # Restore in the correct order
          PGPASSWORD="$SUPABASE_DB_PASSWORD" psql "$DB_URL" \
            --single-transaction \
            --variable ON_ERROR_STOP=1 \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_roles.sql \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_schema.sql \
            --command 'SET session_replication_role = replica' \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_data.sql

      - name: Restore migration history
        run: |
          ENCODED_PASSWORD=$(echo -n "$SUPABASE_DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgres://$SUPABASE_DB_USER:${ENCODED_PASSWORD}@$SUPABASE_DB_HOST:5432/$SUPABASE_DB_NAME"
          PGPASSWORD="$SUPABASE_DB_PASSWORD" psql "$DB_URL" \
            --single-transaction \
            --variable ON_ERROR_STOP=1 \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_migrations.sql

      - name: Restore auth and storage schemas
        run: |
          ENCODED_PASSWORD=$(echo -n "$SUPABASE_DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgres://$SUPABASE_DB_USER:${ENCODED_PASSWORD}@$SUPABASE_DB_HOST:5432/$SUPABASE_DB_NAME"
          supabase db diff --schema auth,storage > changes.sql
          PGPASSWORD="$SUPABASE_DB_PASSWORD" psql "$DB_URL" -f changes.sql

      - name: Enable publication on tables
        run: |
          echo "Please manually enable replication for tables in the Supabase Dashboard under Publications."

      - name: Cleanup
        run: rm -rf ${{ github.event.inputs.backup_folder }} changes.sql

      - name: Restoration complete
        run: |
          echo "Database restore completed from backup folder: ${{ github.event.inputs.backup_folder }}"
          echo "Please verify your database to ensure the restoration was successful."
          echo "Remember to manually enable replication for tables in the Supabase Dashboard under Publications."
