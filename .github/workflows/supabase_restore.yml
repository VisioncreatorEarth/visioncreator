name: Supabase Restore

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "CONFIRM" to proceed with database restore'
        required: true
      backup_folder:
        description: "Enter the backup folder name to restore"
        required: true

jobs:
  restore:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'CONFIRM'
    env:
      DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      DB_USER: ${{ secrets.SUPABASE_DB_USER }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase Login
        run: supabase login $SUPABASE_ACCESS_TOKEN

      - name: Create minimal Supabase config
        run: |
          mkdir -p supabase
          echo "project_id = \"$SUPABASE_PROJECT_ID\"" > supabase/config.toml

      - name: Link to Supabase project
        run: supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Construct DB URL with encoded password
        run: |
          ENCODED_PASSWORD=$(echo -n "$DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgresql://$DB_USER:$ENCODED_PASSWORD@$DB_HOST:5432/$DB_NAME"
          echo "DB_URL=$DB_URL" >> $GITHUB_ENV

      - name: Reset Supabase Database
        run: |
          supabase db reset --db-url "$DB_URL"

      - name: Install PostgreSQL 15 client and jq
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y postgresql-client-15 jq
          sudo update-alternatives --install /usr/bin/psql psql /usr/lib/postgresql/15/bin/psql 1500
          psql --version

      - name: Configure AWS CLI for DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.DO_SPACE_REGION }}
          aws configure set s3.endpoint_url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com

      - name: Download backup files
        run: |
          mkdir -p ${{ github.event.inputs.backup_folder }}
          aws s3 --endpoint-url https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com \
            cp --recursive s3://${{ secrets.DO_SPACE_NAME }}/${{ github.event.inputs.backup_folder }} ./${{ github.event.inputs.backup_folder }}

      - name: Restore database
        run: |
          psql "$DB_URL" \
            --single-transaction \
            --variable ON_ERROR_STOP=1 \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_roles.sql \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_schema.sql \
            --command 'SET session_replication_role = replica' \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_data.sql

      - name: Restore migration history
        run: |
          psql "$DB_URL" \
            --single-transaction \
            --variable ON_ERROR_STOP=1 \
            --file ./${{ github.event.inputs.backup_folder }}/${{ github.event.inputs.backup_folder }}_migrations.sql

      - name: Cleanup
        run: rm -rf ${{ github.event.inputs.backup_folder }} changes.sql

      - name: Restoration complete
        run: |
          echo "Database restore completed from backup folder: ${{ github.event.inputs.backup_folder }}"
          echo "Please verify your database to ensure the restoration was successful."
          echo "Remember to manually enable replication for tables in the Supabase Dashboard under Publications."
