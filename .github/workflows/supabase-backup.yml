name: Supabase Full Backup

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight

jobs:
  run_db_backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
      DB_USER: ${{ secrets.SUPABASE_DB_USER }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Construct DB URL with encoded password
        run: |
          ENCODED_PASSWORD=$(echo -n "$DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgresql://$DB_USER.$SUPABASE_PROJECT_ID:$ENCODED_PASSWORD@$DB_HOST:5432/$DB_NAME"
          echo "DB_URL=$DB_URL" >> $GITHUB_ENV

      - name: Debug Connection String (Masked)
        run: |
          echo "Connection string: postgresql://$DB_USER.$SUPABASE_PROJECT_ID:****@$DB_HOST:5432/$DB_NAME"

      - name: Backup schema and roles
        run: supabase db dump --db-url "$DB_URL" -f schema_roles_backup.sql --debug

      - name: Backup data
        run: supabase db dump --db-url "$DB_URL" -f data_backup.sql --data-only --use-copy --debug

      - name: Upload schema and roles backup to DO Spaces
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: schema_roles_backup.sql
          out_dir: supabase_backups/$(date +%Y-%m-%d)

      - name: Upload data backup to DO Spaces
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: data_backup.sql
          out_dir: supabase_backups/$(date +%Y-%m-%d)

      - name: Clean up local backup files
        run: |
          rm schema_roles_backup.sql data_backup.sql
