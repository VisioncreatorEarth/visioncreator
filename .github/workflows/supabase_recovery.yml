name: Supabase Restore

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "CONFIRM" to proceed with database restore'
        required: true

jobs:
  restore:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'CONFIRM'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PostgreSQL client and AWS CLI
        run: |
          # Add PostgreSQL repository
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update

          # Install PostgreSQL 15 client, AWS CLI, and jq
          sudo apt-get install -y postgresql-client-15 awscli jq

          # Verify installations
          pg_restore --version
          aws --version

      - name: Configure AWS CLI for DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.DO_SPACE_REGION }}
          aws configure set default.s3.endpoint https://${{ secrets.DO_SPACE_REGION }}.digitaloceanspaces.com

      - name: Get latest backup files
        run: |
          LATEST_FOLDER=$(aws s3 ls s3://${{ secrets.DO_SPACE_NAME }}/ | sort | tail -n 1 | awk '{print $2}' | sed 's/.$//')
          echo "Latest backup folder: $LATEST_FOLDER"
          aws s3 cp s3://${{ secrets.DO_SPACE_NAME }}/$LATEST_FOLDER/schema_backup.sql ./schema_backup.sql
          aws s3 cp s3://${{ secrets.DO_SPACE_NAME }}/$LATEST_FOLDER/data_backup.sql ./data_backup.sql
          echo "LATEST_FOLDER=$LATEST_FOLDER" >> $GITHUB_ENV

      - name: Restore database
        env:
          SUPABASE_DB_HOST: ${{ secrets.SUPABASE_DB_HOST }}
          SUPABASE_DB_NAME: ${{ secrets.SUPABASE_DB_NAME }}
          SUPABASE_DB_USER: ${{ secrets.SUPABASE_DB_USER }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          CONNECTION_STRING="postgresql://$SUPABASE_DB_USER.$SUPABASE_PROJECT_REF:$SUPABASE_DB_PASSWORD@$SUPABASE_DB_HOST:6543/$SUPABASE_DB_NAME"
          PGPASSWORD=$SUPABASE_DB_PASSWORD psql -h $SUPABASE_DB_HOST -p 6543 -U $SUPABASE_DB_USER.$SUPABASE_PROJECT_REF -d $SUPABASE_DB_NAME -f schema_backup.sql
          PGPASSWORD=$SUPABASE_DB_PASSWORD psql -h $SUPABASE_DB_HOST -p 6543 -U $SUPABASE_DB_USER.$SUPABASE_PROJECT_REF -d $SUPABASE_DB_NAME -f data_backup.sql

      - name: Cleanup
        run: |
          rm schema_backup.sql data_backup.sql

      - name: Restoration complete
        run: |
          echo "Database restore completed from backup folder: ${{ env.LATEST_FOLDER }}"
          echo "Please verify your database to ensure the restoration was successful."
